<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>变量在Java中的运行顺序</title>
    <url>/2019/10/17/%E5%8F%98%E9%87%8F%E5%9C%A8Java%E4%B8%AD%E7%9A%84%E8%BF%90%E8%A1%8C%E9%A1%BA%E5%BA%8F/</url>
    <content><![CDATA[<p>   <strong>在Java中，变量的初始化顺序是：静态变量&amp;静态代码块 》变量&amp;普通代码块 》构造器。</strong>之前的一个误区是构造器的执行顺序是仅次于静态变量和静态得代码块的。换个角度想一下，其实很好理解为什么构造器要在最后在执行。因为，假设构造器中需要一个变量，若变量在构造器之后初始化，这就会造成变量未初始化就调用的现象，显然这在任何编程语言中是不允许的（虽然很多语言都有默认的初始值）。下面举一个简单的例子：<br> <a id="more"></a></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParamerInit</span> </span>&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"普通代码块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"静态代码块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ParamerInit</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"构造器"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BaseClasss class_1=<span class="keyword">new</span> BaseClasss(<span class="string">"普通变量"</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BaseClasss class_2=<span class="keyword">new</span> BaseClasss(<span class="string">"静态变量"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> ParamerInit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//执行结果</span></span><br><span class="line"> 静态代码块</span><br><span class="line"> 静态变量</span><br><span class="line"> 普通代码块 </span><br><span class="line"> 普通变量</span><br><span class="line"> 构造器</span><br></pre></td></tr></table></figure></div>

<p>上述例子当中的变量是一个普通的Java对象，对于其他基本类型的变量同样适用，从结果来看，显然构造器是最后来执行的。需要注意的是静态变量和静态代码块以及普通变量和普通代码块之间的顺序又是怎么样的呢？答案是：和其定义的顺序有关，看如下代码以及执行结果。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ParamerInit</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> BaseClasss class_1=<span class="keyword">new</span> BaseClasss(<span class="string">"普通变量"</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BaseClasss class_2=<span class="keyword">new</span> BaseClasss(<span class="string">"静态变量"</span>);</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"普通代码块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"静态代码块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ParamerInit</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"构造器"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> ParamerInit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//执行结果</span></span><br><span class="line">静态变量</span><br><span class="line">静态代码块</span><br><span class="line">普通变量</span><br><span class="line">普通代码块</span><br><span class="line">构造器</span><br></pre></td></tr></table></figure></div>
<p>当我把静态变量和静态代码块以及变量和普通代码块的定义顺序对调之后，得到的结果如上，这说明对于静态的变量和代码块来说，它们之间的执顺序根据其定义顺序而定，同样对于普通变量和代码块来说亦然。</p>
<p>上述结果都是没有继承类，仅在单一类中的变量执行顺序，那么如果有继承类时，子类和父类当中变量执行顺序又是怎样的？</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//该类继承自上述父类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExtendsClassInit</span> <span class="keyword">extends</span> <span class="title">ParamerInit</span></span>&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"子类---普通代码块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"子类---静态代码块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ExtendsClassInit</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"子类---构造器"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BaseClasss class_1=<span class="keyword">new</span> BaseClasss(<span class="string">"子类---普通变量"</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BaseClasss class_2=<span class="keyword">new</span> BaseClasss(<span class="string">"子类---静态变量"</span>);</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> ExtendsClassInit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//执行结果</span></span><br><span class="line">父类---静态变量</span><br><span class="line">父类---静态代码块</span><br><span class="line">子类---静态代码块</span><br><span class="line">子类---静态变量</span><br><span class="line">父类---普通变量</span><br><span class="line">父类---普通代码块</span><br><span class="line">父类---构造器</span><br><span class="line">子类---普通代码块</span><br><span class="line">子类---普通变量</span><br><span class="line">子类---构造器</span><br></pre></td></tr></table></figure></div>

<p>从结果很容易的看到，对于有继承类的变量的初始化顺序是首先初始化父类当中的静态变量和代码块，其次是子类当中的静态变量和代码块，然后继续初始化父类中的普通变量和代码块，最后是子类中的普通变量和代码块。即优先初始化的是父类中的变量。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>面试知识点</tag>
      </tags>
  </entry>
  <entry>
    <title>计算两个日期之间的天数</title>
    <url>/2019/10/17/Java%E4%B8%AD%E7%9A%84%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</url>
    <content><![CDATA[<p>思路：</p>
<ol>
<li>同年同月：之间两个天数相减即可，即（day1-day2-1）很简单。</li>
<li>同年不同月：先计算完整月数的天数，即从指定日期的写个月开始计算，计算每个月有多少天，都加起来即可；然后计算指定日期到月初和月末的天数。如2019-6-12和2019-2-3，我们先计算3、4、5这三个完整月份的天数，然后计算6月12日到月初的天数，再计算2月3日到月末的天数，三者加起来就是两日期之间的天数。</li>
<li>年月日都不同：思路和计算不同月的类似。我们可以先计算两个年份之间完整年份的天数，然后再计算较大年份距离年初（1月1日）的天数，再计算较小年份距离年末（12-31）的天数，将三者加起来就是两个日期之间的天数。<a id="more"></a>
下面帖出我自己的代码：<br><img src="https://img-blog.csdnimg.cn/20190313152945838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NvZGVyX1lhZmVuZw==,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://img-blog.csdnimg.cn/20190313153055453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NvZGVyX1lhZmVuZw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190313153142194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NvZGVyX1lhZmVuZw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190313153312374.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NvZGVyX1lhZmVuZw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190313153516136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NvZGVyX1lhZmVuZw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
</ol>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HowManyDays</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> year;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> month;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> day;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getYear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> year;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setYear</span><span class="params">(<span class="keyword">int</span> year)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.year = year;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMonth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> month;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMonth</span><span class="params">(<span class="keyword">int</span> month)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.month = month;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getDay</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> day;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDay</span><span class="params">(<span class="keyword">int</span> day)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.day = day;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">HowManyDays</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> month, <span class="keyword">int</span> day)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		<span class="keyword">this</span>.year = year;</span><br><span class="line">		<span class="keyword">this</span>.month = month;</span><br><span class="line">		<span class="keyword">this</span>.day = day;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">HowManyDays</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * 判断某年是否是闰年</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLeapYear</span><span class="params">(<span class="keyword">int</span> year)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (year % <span class="number">400</span> == <span class="number">0</span> || (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>)) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * 某年某月 月有多少天</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">daysOfMonth</span><span class="params">(<span class="keyword">int</span> year, <span class="keyword">int</span> month)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(month&gt;<span class="number">12</span>||month&lt;=<span class="number">0</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">"日期不合法"</span>);</span><br><span class="line">			<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (month == <span class="number">1</span> || month == <span class="number">3</span> || month == <span class="number">5</span> || month == <span class="number">7</span> || month == <span class="number">8</span> || month == <span class="number">10</span> || month == <span class="number">12</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">31</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (month == <span class="number">4</span> || month == <span class="number">6</span> || month == <span class="number">9</span> || month == <span class="number">11</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">30</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (isLeapYear(year) &amp;&amp; month == <span class="number">2</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">29</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;<span class="comment">// 非闰年二月28天</span></span><br><span class="line">			<span class="keyword">return</span> <span class="number">28</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 计算机本年一共多少天</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">daysOfYear</span><span class="params">(<span class="keyword">int</span> year)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">		result = <span class="number">7</span> * <span class="number">31</span> + <span class="number">4</span> * <span class="number">30</span>;<span class="comment">// 不包括闰月</span></span><br><span class="line">		<span class="keyword">if</span> (isLeapYear(year)) &#123;</span><br><span class="line">			result += <span class="number">29</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			result += <span class="number">28</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * 计算指定日期到年初的天数</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">daysOfYearThis</span><span class="params">(HowManyDays date)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> year=date.getYear();</span><br><span class="line">		<span class="keyword">int</span> month=date.getMonth();</span><br><span class="line">		<span class="keyword">int</span> day=date.getDay();</span><br><span class="line">		<span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">int</span> month2 = <span class="number">1</span>;<span class="comment">// 该年的元月</span></span><br><span class="line">		<span class="keyword">if</span>(year&lt;<span class="number">0</span>||month&gt;<span class="number">12</span>||month&lt;<span class="number">0</span>||day&gt;<span class="number">31</span>||day&lt;<span class="number">0</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">"日期不合法"</span>);</span><br><span class="line">			<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">while</span> (month != month2) &#123;</span><br><span class="line">			result += daysOfMonth(year, month2);</span><br><span class="line">			month2++;</span><br><span class="line">		&#125;</span><br><span class="line">		result = result + day;</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * 计算指定日期到年末的天数</span></span><br><span class="line"><span class="comment">	 * 思路：先算完整的月份，即从当前日期的下一个月算起，直到下一年的1月1日，此时算出了下一个月到1月1日之间的天数</span></span><br><span class="line"><span class="comment">	 * 再加上此时日期到月底的天数，从而得到本日期到年末之间的天数</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">daysOfYear_Next</span><span class="params">(HowManyDays date)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> year=date.getYear();</span><br><span class="line">		<span class="keyword">int</span> month=date.getMonth();</span><br><span class="line">		<span class="keyword">int</span> day=date.getDay();</span><br><span class="line">		<span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">int</span> month2 = <span class="number">1</span>;<span class="comment">// 下一年的元月</span></span><br><span class="line">		<span class="keyword">int</span> m = month;</span><br><span class="line">		<span class="keyword">if</span>(year&lt;<span class="number">0</span>||month&lt;<span class="number">0</span>||month&gt;<span class="number">12</span>||day&gt;<span class="number">31</span>||day&lt;<span class="number">0</span>) &#123;</span><br><span class="line">			System.out.println(<span class="string">"日期不合法"</span>);</span><br><span class="line">			<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">while</span> (month2 != m) &#123;</span><br><span class="line">			m++;<span class="comment">// 先计算下一月到次年1月1日的天数</span></span><br><span class="line">			<span class="keyword">if</span> (m &lt; <span class="number">12</span>) &#123;</span><br><span class="line">				result += daysOfMonth(year, m);</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> (m == <span class="number">12</span>) &#123;<span class="comment">//年内最后一个月</span></span><br><span class="line">				result += daysOfMonth(year, m);<span class="comment">//计算12月份天数</span></span><br><span class="line">				result += daysOfMonth(year, month) - day;<span class="comment">//daysOfMonth(year, month) - day计算指定日期到月末天数</span></span><br><span class="line">				m = <span class="number">1</span>;<span class="comment">//循环结束</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * date1&gt;date2</span></span><br><span class="line"><span class="comment">	 * */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">how_many_day</span><span class="params">(HowManyDays date1,HowManyDays date2)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">int</span> m1, m2, y1, y2;</span><br><span class="line">		<span class="comment">//exchange(date1, date2);</span></span><br><span class="line">		<span class="comment">//System.out.println(date1.getYear()+""+date1.getMonth()+" "+date1.getDay());</span></span><br><span class="line">		m1 = date1.getMonth();</span><br><span class="line">		m2 = date2.getMonth();</span><br><span class="line">		y1 = date1.getYear();</span><br><span class="line">		y2 = date2.getYear();</span><br><span class="line">		<span class="keyword">if</span> (date1.getYear() == date2.getYear() &amp;&amp; date1.getMonth() == date2.getMonth()) &#123;<span class="comment">// 同年同月</span></span><br><span class="line">			result = Math.abs(date1.getDay() - date2.getDay());<span class="comment">//直接计算日期天数之间的差值</span></span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (date1.getYear() == date2.getDay()) &#123;<span class="comment">// 同年不同月</span></span><br><span class="line">			<span class="keyword">while</span> ((m2 + <span class="number">1</span>) != m1) &#123;</span><br><span class="line">				result += daysOfMonth(date2.getYear(), m2);</span><br><span class="line">				m2++;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">/*</span></span><br><span class="line"><span class="comment">			 * daysOfMonth(year2, month2)-day2-1 计算较小月距离月末还有多少天</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line">			result = result + date1.getDay() + daysOfMonth(date2.getYear(), date2.getMonth()) - date2.getDay() - <span class="number">1</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;<span class="comment">// 不同年，不同月</span></span><br><span class="line">			<span class="keyword">while</span> (y1 != (y2+<span class="number">1</span>)) &#123;<span class="comment">//计算完整年的所有天数</span></span><br><span class="line">				result += daysOfYear(y2);</span><br><span class="line">				y2++;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">/*</span></span><br><span class="line"><span class="comment">			 * 在所有完整年计算完之后，再加上较大年份距离年初的天数和较小年份到年初的天数</span></span><br><span class="line"><span class="comment">			 * */</span></span><br><span class="line">			result += daysOfYearThis(date1) + daysOfYear_Next(date2);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String ags[])</span> </span>&#123;</span><br><span class="line">		HowManyDays hd = <span class="keyword">new</span> HowManyDays();</span><br><span class="line">		HowManyDays date1=<span class="keyword">new</span> HowManyDays(<span class="number">2019</span>,<span class="number">10</span>,<span class="number">13</span>);</span><br><span class="line">		HowManyDays date2=<span class="keyword">new</span> HowManyDays(<span class="number">2017</span>, <span class="number">10</span>, <span class="number">12</span>);</span><br><span class="line">		<span class="keyword">int</span> days = hd.how_many_day(date1,date2);</span><br><span class="line">		System.out.println(days);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>面试知识点</tag>
      </tags>
  </entry>
</search>
